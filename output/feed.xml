<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-11-12T22:52:34-08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Thomas Learning Log</title><subtitle>Prepare for tomorrow</subtitle><entry><title type="html">Developing with multiple GitHub accounts on one MacBook</title><link href="http://localhost:4000/blog/multiple-github-accounts" rel="alternate" type="text/html" title="Developing with multiple GitHub accounts on one MacBook" /><published>2021-11-12T00:00:00-08:00</published><updated>2021-11-12T00:00:00-08:00</updated><id>http://localhost:4000/blog/multiple-github-accounts</id><content type="html" xml:base="http://localhost:4000/blog/multiple-github-accounts">&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories and if you don’t know what GitHub Pages are you can visit on click &lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/about-github-pages&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt; or &lt;a href=&quot;https://pages.github.com/&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&quot;source--jekyll-docs&quot;&gt;Source : &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll Docs&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;

&lt;blockquote&gt;
  &lt;p&gt;I am using a third, nonexistent account in the samples to show that this can be extended to more than 2 accounts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;create-ssh-keys-for-all-accounts&quot;&gt;Create SSH keys for all accounts&lt;/h1&gt;
&lt;p&gt;First make sure your current directory is your** &lt;strong&gt;&lt;em&gt;.ssh&lt;/em&gt;&lt;/strong&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ cd ~/.ssh&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ ssh-keygen -t rsa -C &quot;my@pers.on.al&quot; -f &quot;github-ibrahimlawal&quot;&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ ssh-keygen -t rsa -C &quot;my@wo.rk&quot; -f &quot;github-ibrahimlawal-paystack&quot;&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ ssh-keygen -t rsa -C &quot;moi@pl.ay&quot; -f &quot;github-ibraheemweynodey&quot;&lt;/code&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The -C option is a comment to help identify the key.&lt;/li&gt;
  &lt;li&gt;The -f option specifies the file name for the key pair.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can choose how to name the key pair. I followed the recommendation here and used &lt;strong&gt;&lt;em&gt;github-{GitHub username}&lt;/em&gt;&lt;/strong&gt;.
You’ll now have a public and private key in your ~/.ssh/ folder.&lt;/p&gt;

&lt;h1 id=&quot;add-the-ssh-keys-to-your-ssh-agent&quot;&gt;Add the SSH keys to your SSH-agent&lt;/h1&gt;
&lt;p&gt;Your keys are now created but won’t be used until they are added to the agent. Let’s add them.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ ssh-add -K ~/.ssh/github-ibrahimlawal&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ ssh-add -K ~/.ssh/github-ibrahimlawal-paystack&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ ssh-add -K ~/.ssh/github-ibraheemweynodey&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You only need the -K option on a mac. More details on adding keys to the SSH agent here.&lt;/p&gt;

&lt;h3 id=&quot;after-installing-the-requirements-you-can-follow-these-guides&quot;&gt;After Installing the Requirements you can follow these guides:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;For detailed install instructions have a look at the guide for your operating system.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/macos/&quot; target=&quot;_blank&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/ubuntu/&quot; target=&quot;_blank&quot;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/other-linux/&quot; target=&quot;_blank&quot;&gt;Other Linux Distros&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/windows/&quot; target=&quot;_blank&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;creating-a-new-jekyll-site&quot;&gt;Creating a new Jekyll site&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;We can create a new Jekyll site just by a simple command:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;jekyll-new-my-site&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll new my-site&lt;/code&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jekyll will create a new directory named as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my-site&lt;/code&gt; which is customizable (i.e., you can change the name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my-site&lt;/code&gt; to anything you want for example &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll new brutus&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;changing-into-the-directory&quot;&gt;Changing into the Directory&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;We have to go inside the directory:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;cd-my-site&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd my-site&lt;/code&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my-site&lt;/code&gt; is just a random name which is customizable.&lt;/p&gt;

&lt;h3 id=&quot;building-the-site-and-making-it-available-on-a-local-server&quot;&gt;Building the site and making it available on a local server&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;bundle-exec-jekyll-serve&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;browsing-your-jekyll-site&quot;&gt;Browsing your Jekyll site&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;browse-to-httplocalhost4000&quot;&gt;Browse to &lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:4000/&lt;/code&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;h6 id=&quot;on-encountering-any-problem-while-building-and-serving-your-jekyll-site-you-can-consider-visiting-to-the-troubleshooting-page&quot;&gt;On encountering any problem while building and serving your Jekyll site you can consider visiting to the &lt;a href=&quot;https://jekyllrb.com/docs/troubleshooting/#configuration-problems&quot; target=&quot;_blank&quot;&gt;troubleshooting&lt;/a&gt; page&lt;/h6&gt;</content><author><name></name></author><category term="github" /><summary type="html">Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories and if you don’t know what GitHub Pages are you can visit on click here or here Source : Jekyll Docs I am using a third, nonexistent account in the samples to show that this can be extended to more than 2 accounts. Create SSH keys for all accounts First make sure your current directory is your** .ssh folder. $ cd ~/.ssh $ ssh-keygen -t rsa -C &quot;my@pers.on.al&quot; -f &quot;github-ibrahimlawal&quot; $ ssh-keygen -t rsa -C &quot;my@wo.rk&quot; -f &quot;github-ibrahimlawal-paystack&quot; $ ssh-keygen -t rsa -C &quot;moi@pl.ay&quot; -f &quot;github-ibraheemweynodey&quot; The -C option is a comment to help identify the key. The -f option specifies the file name for the key pair. You can choose how to name the key pair. I followed the recommendation here and used github-{GitHub username}. You’ll now have a public and private key in your ~/.ssh/ folder. Add the SSH keys to your SSH-agent Your keys are now created but won’t be used until they are added to the agent. Let’s add them. $ ssh-add -K ~/.ssh/github-ibrahimlawal $ ssh-add -K ~/.ssh/github-ibrahimlawal-paystack $ ssh-add -K ~/.ssh/github-ibraheemweynodey You only need the -K option on a mac. More details on adding keys to the SSH agent here. After Installing the Requirements you can follow these guides: For detailed install instructions have a look at the guide for your operating system. macOS Ubuntu Other Linux Distros Windows Creating a new Jekyll site We can create a new Jekyll site just by a simple command: jekyll new my-site Jekyll will create a new directory named as my-site which is customizable (i.e., you can change the name from my-site to anything you want for example jekyll new brutus). Changing into the Directory We have to go inside the directory: cd my-site Again, my-site is just a random name which is customizable. Building the site and making it available on a local server bundle exec jekyll serve Browsing your Jekyll site Browse to http://localhost:4000/ On encountering any problem while building and serving your Jekyll site you can consider visiting to the troubleshooting page</summary></entry><entry><title type="html">How to Start LaTeX</title><link href="http://localhost:4000/blog/LaTeX-Start" rel="alternate" type="text/html" title="How to Start LaTeX" /><published>2021-11-11T08:40:00-08:00</published><updated>2021-11-11T08:40:00-08:00</updated><id>http://localhost:4000/blog/LaTeX-Start</id><content type="html" xml:base="http://localhost:4000/blog/LaTeX-Start">This is an example for test.</content><author><name>Thomas Song</name></author><category term="latex" /><summary type="html">This is an example for test.</summary></entry><entry><title type="html">Python 강좌(1) - Python 기본</title><link href="http://localhost:4000/blog/python-test" rel="alternate" type="text/html" title="Python 강좌(1) - Python 기본" /><published>2021-10-21T09:40:00-07:00</published><updated>2021-10-21T09:40:00-07:00</updated><id>http://localhost:4000/blog/python-test</id><content type="html" xml:base="http://localhost:4000/blog/python-test">Code snippet

{% gist tom6174/ca7797a58d2920eaeef3557a93e0e08e %}</content><author><name>sky6174</name></author><category term="python" /><category term="python" /><summary type="html">Code snippet</summary></entry><entry><title type="html">GitHub 공부(1) - Git 기본</title><link href="http://localhost:4000/blog/GitHub-test" rel="alternate" type="text/html" title="GitHub 공부(1) - Git 기본" /><published>2020-10-20T09:40:00-07:00</published><updated>2020-10-20T09:40:00-07:00</updated><id>http://localhost:4000/blog/GitHub-test</id><content type="html" xml:base="http://localhost:4000/blog/GitHub-test">This is an example for test.</content><author><name>Thomas Song</name></author><category term="github" /><summary type="html">This is an example for test.</summary></entry><entry><title type="html">Sample Post</title><link href="http://localhost:4000/blog/sample-post" rel="alternate" type="text/html" title="Sample Post" /><published>2020-04-24T00:00:00-07:00</published><updated>2020-04-24T00:00:00-07:00</updated><id>http://localhost:4000/blog/sample-post</id><content type="html" xml:base="http://localhost:4000/blog/sample-post">This post will show you how the content will look like in the post pages and how the headlines, quotes and quotes will be represented. Jekyll is mainly used to write simple markdown and after that it renders out a static pages, so you need to know the basics of writing markdown for that.
For more information about writing markdown you can checkout the following markdown cheatsheets:
* [Mastering Markdown](https://guides.github.com/features/mastering-markdown/)
* [Markdown Guide](https://www.markdownguide.org/cheat-sheet/)
* [GitHub Flavored Markdown Spec](https://github.github.com/gfm/)

---

# This is the h1 text
## This is the h2 text
### This is the h3 text
#### This is the h4 text
##### This is the h5 text
###### This is the h6 text

**Bold Text in the post will look like:**&lt;br&gt;
**This text is Bold**

**Italic Text in the post will look like:**&lt;br&gt;
*This text is Italic*

&gt; Quotes on your post will look like this

`Codes on your post will look like this`

**Link in the post will look like:**&lt;br&gt;
[This is a link](#)

**Bullet list in the post will look like:**
* Item 1
* Item 2
* Item 3
* Item 4
* Item 5

**Number list in the post will look like:**
1. Item 1
2. Item 2
3. Item 3
4. Item 4
5. Item 5

**Images in the post will look like:**&lt;br&gt;
![Test Image](/WhatATheme/assets/images/1280x720%20Placeholder.png)

**Normal text in the post will look like**&lt;br&gt;
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris id finibus nisl. Etiam in hendrerit est. Nulla non erat ac lectus interdum lobortis. Vestibulum at mi ex. Mauris nisl mi, venenatis et feugiat nec, finibus porttitor velit. Suspendisse tincidunt lobortis leo, quis tristique tellus iaculis quis. Donec eleifend pulvinar gravida. Proin non lorem eros. Donec sit amet finibus ex, eget vestibulum nunc. Ut ut enim id purus porttitor tristique. Vivamus tincidunt eleifend hendrerit. Proin metus felis, ultrices vel dui in, porta dapibus dui. Sed sagittis ex vitae dui tristique dignissim. Cras vel leo ipsum.

Aenean ac neque et risus mattis accumsan. Sed ac tellus molestie, lacinia ante sit amet, convallis felis. Maecenas aliquet lectus nec euismod auctor. Donec finibus pellentesque tortor, ac efficitur metus suscipit non. Proin diam orci, blandit quis malesuada ac, efficitur a nisl. Mauris eleifend consequat blandit. Sed egestas quam et orci gravida, non euismod metus scelerisque. Curabitur venenatis pellentesque erat commodo pharetra. Fusce id ante nec ipsum fringilla auctor. In justo quam, feugiat placerat eleifend dapibus, luctus et quam. Fusce facilisis erat ut odio convallis viverra et id mauris. Sed vehicula tempus consectetur. Aliquam pharetra, purus non egestas tristique, tellus massa fringilla est, id sagittis tellus urna non mauris. Suspendisse fringilla, velit nec blandit facilisis, ligula ante imperdiet est, et placerat magna sem quis tortor.

Vestibulum vitae fermentum velit, rhoncus egestas orci. Nulla at purus ut orci posuere vulputate. In eget leo diam. In congue in diam nec elementum. Suspendisse fringilla ante nulla, eu tristique orci ultrices eget. Aenean non lorem tellus. Vestibulum tempor metus sit amet tellus feugiat, sit amet consequat lacus ultricies.

Donec imperdiet, lectus eget congue cursus, dolor enim finibus risus, ut molestie lorem tellus non tortor. Donec quam nibh, molestie in dapibus et, efficitur non tortor. Morbi orci tellus, mollis vel mi vitae, auctor lobortis erat. Ut gravida velit eget ligula lacinia, id rhoncus tellus gravida. Maecenas laoreet rutrum consequat. Suspendisse sed nibh dui. Curabitur dictum euismod mollis. Sed egestas libero libero, eu accumsan augue placerat non. Nunc id condimentum orci. Mauris vitae sollicitudin quam.

**Giphy Gifs will look like:**&lt;br&gt;
&lt;iframe src=&quot;https://giphy.com/embed/ZqlvCTNHpqrio&quot; width=&quot;480&quot; height=&quot;259&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/laughing-despicable-me-minions-ZqlvCTNHpqrio&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

**YouTUbe Videos will look like:**&lt;br&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/jTPXwbDtIpA&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;</content><author><name></name></author><category term="python" /><category term="python" /><summary type="html">This post will show you how the content will look like in the post pages and how the headlines, quotes and quotes will be represented. Jekyll is mainly used to write simple markdown and after that it renders out a static pages, so you need to know the basics of writing markdown for that. For more information about writing markdown you can checkout the following markdown cheatsheets: Mastering Markdown Markdown Guide GitHub Flavored Markdown Spec This is the h1 text This is the h2 text This is the h3 text This is the h4 text This is the h5 text This is the h6 text Bold Text in the post will look like: This text is Bold Italic Text in the post will look like: This text is Italic Quotes on your post will look like this Codes on your post will look like this Link in the post will look like: This is a link Bullet list in the post will look like: Item 1 Item 2 Item 3 Item 4 Item 5 Number list in the post will look like: Item 1 Item 2 Item 3 Item 4 Item 5 Images in the post will look like: Normal text in the post will look like Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris id finibus nisl. Etiam in hendrerit est. Nulla non erat ac lectus interdum lobortis. Vestibulum at mi ex. Mauris nisl mi, venenatis et feugiat nec, finibus porttitor velit. Suspendisse tincidunt lobortis leo, quis tristique tellus iaculis quis. Donec eleifend pulvinar gravida. Proin non lorem eros. Donec sit amet finibus ex, eget vestibulum nunc. Ut ut enim id purus porttitor tristique. Vivamus tincidunt eleifend hendrerit. Proin metus felis, ultrices vel dui in, porta dapibus dui. Sed sagittis ex vitae dui tristique dignissim. Cras vel leo ipsum. Aenean ac neque et risus mattis accumsan. Sed ac tellus molestie, lacinia ante sit amet, convallis felis. Maecenas aliquet lectus nec euismod auctor. Donec finibus pellentesque tortor, ac efficitur metus suscipit non. Proin diam orci, blandit quis malesuada ac, efficitur a nisl. Mauris eleifend consequat blandit. Sed egestas quam et orci gravida, non euismod metus scelerisque. Curabitur venenatis pellentesque erat commodo pharetra. Fusce id ante nec ipsum fringilla auctor. In justo quam, feugiat placerat eleifend dapibus, luctus et quam. Fusce facilisis erat ut odio convallis viverra et id mauris. Sed vehicula tempus consectetur. Aliquam pharetra, purus non egestas tristique, tellus massa fringilla est, id sagittis tellus urna non mauris. Suspendisse fringilla, velit nec blandit facilisis, ligula ante imperdiet est, et placerat magna sem quis tortor. Vestibulum vitae fermentum velit, rhoncus egestas orci. Nulla at purus ut orci posuere vulputate. In eget leo diam. In congue in diam nec elementum. Suspendisse fringilla ante nulla, eu tristique orci ultrices eget. Aenean non lorem tellus. Vestibulum tempor metus sit amet tellus feugiat, sit amet consequat lacus ultricies. Donec imperdiet, lectus eget congue cursus, dolor enim finibus risus, ut molestie lorem tellus non tortor. Donec quam nibh, molestie in dapibus et, efficitur non tortor. Morbi orci tellus, mollis vel mi vitae, auctor lobortis erat. Ut gravida velit eget ligula lacinia, id rhoncus tellus gravida. Maecenas laoreet rutrum consequat. Suspendisse sed nibh dui. Curabitur dictum euismod mollis. Sed egestas libero libero, eu accumsan augue placerat non. Nunc id condimentum orci. Mauris vitae sollicitudin quam. Giphy Gifs will look like: via GIPHY YouTUbe Videos will look like:</summary></entry><entry><title type="html">How to Install and use WhatATheme?</title><link href="http://localhost:4000/blog/how-to-install-whatatheme" rel="alternate" type="text/html" title="How to Install and use WhatATheme?" /><published>2020-04-22T00:00:00-07:00</published><updated>2020-04-22T00:00:00-07:00</updated><id>http://localhost:4000/blog/how-to-install-whatatheme</id><content type="html" xml:base="http://localhost:4000/blog/how-to-install-whatatheme"># What is WhatATheme?
&gt;You’ll find this post in your ***_posts*** directory. Go ahead and edit it and re-build the site to see your changes. &gt;You can rebuild the site in many different ways, but the most common way is to run `bundle exec jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/VfPa2c9kwhQ&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;

---

**WhatATheme** is a customizable Jekyll Portfolio theme which supports blogging. You can use this theme in order to create an elegant, fully responsive portfolio which includes

### Home Page -
* A Hero section - A section where you can outsource an image which will work as the background for the particular section; it also will include your name and a tagline which can be easily manipulated via the _config.yml file.
* An About section - A section where you can include your image and a 60 word paragraph which again you can easily manipulate using the _config.yml file.
* A Contact section - A section where you can include 3 direct ways to contact&lt;br&gt;
`Ping on Messenger`&lt;br&gt;
`Send an Email`&lt;br&gt;
`Tweet on Twitter`&lt;br&gt;
The contact section will also include 10 different social media buttons for your audience to follow.&lt;br&gt;
`Facebook`, `Twitter`, `Instagram`, `LinkedIn`, `GitHub`, `YouTube`, `Reddit`, `Behance`, `Dribbble` &amp; `Spotify`.

### Blog -
The blog includes a horizontal card list where the latest articles are fetched from the _posts folder automatically in top-down format. It also includes an instant search box which matches your query from the title, description &amp; content of your post and shows the result as soon as you type.&lt;br&gt;
The blog card includes
* Post Title
* 300 words from the content of the post
* The publish date
* The time which will be required to read the post.

### Projects -
The Projects page will include all the projects from the **`projects.yml`** file which is present in the _data folder.&lt;br&gt;
Projects will be showcased in a card-list format where each card will contain
* An image related to the project
* A Project Title
* A Project Description of about 80 words

### Footer -
The footer includes
* A small about the author widget which show the same `Author Image` as mentioned in the about section of the Home page which includes `Name of the Author`, `Around 75 words about the author`.
* A more link widget which includes a link to any extra page that you've created and a `Subscribe via RSS` link.
* A Recent posts widget which will include latest 3 posts.

#### Extra Features -
WhatATheme comes pre installed with
* **HTML Compressor** - It'll compress all the pages by removing any extra space or blank lines.
* **Google Analytics** - A web analytics service offered by Google that tracks and reports website traffic. For more information [click here](https://analytics.google.com){:target=&quot;blank&quot;}.
* **Disqus** - A worldwide blog comment hosting service for web sites and online communities that use a networked platform. For more information about Disqus [click here](https://help.disqus.com/en/articles/1717053-what-is-disqus){:target=&quot;blank&quot;}

	##### For more information about WhatATheme [click here](https://github.com/thedevslot/WhatATheme/blob/gh-pages/README.md){:target=&quot;blank&quot;}.

---

# Installation
### Step 1 - Setting up WhatATheme
&gt; * Fork the [repository](https://github.com/thedevslot/WhatATheme/tree/master){:target=&quot;blankl&quot;}
&gt; * Go to repository settings and set Github Pages source as master.
&gt; * Your new site should be ready at [https://username.github.io/WhatATheme/](#){:target=&quot;blank&quot;}

### Step 2 - Making changes via **_config.yml**
&gt; * Open _config.yml file
&gt; * Fill the available details accordingly
&gt; * Commit the changes</content><author><name></name></author><category term="latex" /><category term="latex" /><summary type="html">What is WhatATheme? You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. &amp;gt;You can rebuild the site in many different ways, but the most common way is to run bundle exec jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. WhatATheme is a customizable Jekyll Portfolio theme which supports blogging. You can use this theme in order to create an elegant, fully responsive portfolio which includes Home Page - A Hero section - A section where you can outsource an image which will work as the background for the particular section; it also will include your name and a tagline which can be easily manipulated via the _config.yml file. An About section - A section where you can include your image and a 60 word paragraph which again you can easily manipulate using the _config.yml file. A Contact section - A section where you can include 3 direct ways to contact Ping on Messenger Send an Email Tweet on Twitter The contact section will also include 10 different social media buttons for your audience to follow. Facebook, Twitter, Instagram, LinkedIn, GitHub, YouTube, Reddit, Behance, Dribbble &amp;amp; Spotify. Blog - The blog includes a horizontal card list where the latest articles are fetched from the _posts folder automatically in top-down format. It also includes an instant search box which matches your query from the title, description &amp;amp; content of your post and shows the result as soon as you type. The blog card includes Post Title 300 words from the content of the post The publish date The time which will be required to read the post. Projects - The Projects page will include all the projects from the projects.yml file which is present in the _data folder. Projects will be showcased in a card-list format where each card will contain An image related to the project A Project Title A Project Description of about 80 words Footer - The footer includes A small about the author widget which show the same Author Image as mentioned in the about section of the Home page which includes Name of the Author, Around 75 words about the author. A more link widget which includes a link to any extra page that you’ve created and a Subscribe via RSS link. A Recent posts widget which will include latest 3 posts. Extra Features - WhatATheme comes pre installed with HTML Compressor - It’ll compress all the pages by removing any extra space or blank lines. Google Analytics - A web analytics service offered by Google that tracks and reports website traffic. For more information click here. Disqus - A worldwide blog comment hosting service for web sites and online communities that use a networked platform. For more information about Disqus click here ##### For more information about WhatATheme click here. Installation Step 1 - Setting up WhatATheme Fork the repository Go to repository settings and set Github Pages source as master. Your new site should be ready at https://username.github.io/WhatATheme/ Step 2 - Making changes via _config.yml Open _config.yml file Fill the available details accordingly Commit the changes</summary></entry><entry><title type="html">What is Jekyll? How to use it?</title><link href="http://localhost:4000/blog/what-is-jekyll-how-to-use-it" rel="alternate" type="text/html" title="What is Jekyll? How to use it?" /><published>2020-04-21T00:00:00-07:00</published><updated>2020-04-21T00:00:00-07:00</updated><id>http://localhost:4000/blog/what-is-jekyll-how-to-use-it</id><content type="html" xml:base="http://localhost:4000/blog/what-is-jekyll-how-to-use-it">Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories and if you don't know what GitHub Pages are you can visit on click [here](https://help.github.com/en/github/working-with-github-pages/about-github-pages){:target=&quot;blank&quot;} or [here](https://pages.github.com/){:target=&quot;blank&quot;}
###### Source : [`Jekyll Docs`](https://jekyllrb.com/docs/)

&gt; ### To know more and get started with Jekyll you can click [here](https://jekyllrb.com/){:targe=&quot;_blank&quot;}
	
# Installation
**Jekyll is a Ruby Gem that can be installed on most systems.**
### Requirements
* [Ruby](https://www.ruby-lang.org/en/downloads/){:target=&quot;_blank&quot;} version 2.5.0 or above, including all development headers (ruby version can be checked by running ruby -v)
* [Ruby Gems](https://rubygems.org/pages/download){:target=&quot;_blank&quot;} (which you can check by running gem -v)
* [GCC](https://gcc.gnu.org/install/){:target=&quot;_blank&quot;} and [Make](https://www.gnu.org/software/make/){:target=&quot;_blank&quot;}

### After Installing the Requirements you can follow these guides:
**For detailed install instructions have a look at the guide for your operating system.**
* [macOS](https://jekyllrb.com/docs/installation/macos/){:target=&quot;_blank&quot;}
* [Ubuntu](https://jekyllrb.com/docs/installation/ubuntu/){:target=&quot;_blank&quot;}
* [Other Linux Distros](https://jekyllrb.com/docs/installation/other-linux/){:target=&quot;_blank&quot;}
* [Windows](https://jekyllrb.com/docs/installation/windows/){:target=&quot;_blank&quot;}

### Creating a new Jekyll site
**We can create a new Jekyll site just by a simple command:**&lt;br&gt;
&gt; # `jekyll new my-site`

Jekyll will create a new directory named as `my-site` which is customizable (i.e., you can change the name from `my-site` to anything you want for example `jekyll new brutus`).

### Changing into the Directory
**We have to go inside the directory:**&lt;br&gt;
&gt; # `cd my-site`

Again, `my-site` is just a random name which is customizable.

### Building the site and making it available on a local server
&gt; # `bundle exec jekyll serve`

### Browsing your Jekyll site
&gt; # Browse to [`http://localhost:4000/`](http://localhost:4000/){:target=&quot;_blank&quot;}

###### On encountering any problem while building and serving your Jekyll site you can consider visiting to the [troubleshooting](https://jekyllrb.com/docs/troubleshooting/#configuration-problems){:target=&quot;_blank&quot;} page</content><author><name></name></author><category term="github" /><category term="github" /><summary type="html">Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories and if you don’t know what GitHub Pages are you can visit on click here or here Source : Jekyll Docs To know more and get started with Jekyll you can click here Installation Jekyll is a Ruby Gem that can be installed on most systems. Requirements Ruby version 2.5.0 or above, including all development headers (ruby version can be checked by running ruby -v) Ruby Gems (which you can check by running gem -v) GCC and Make After Installing the Requirements you can follow these guides: For detailed install instructions have a look at the guide for your operating system. macOS Ubuntu Other Linux Distros Windows Creating a new Jekyll site We can create a new Jekyll site just by a simple command: jekyll new my-site Jekyll will create a new directory named as my-site which is customizable (i.e., you can change the name from my-site to anything you want for example jekyll new brutus). Changing into the Directory We have to go inside the directory: cd my-site Again, my-site is just a random name which is customizable. Building the site and making it available on a local server bundle exec jekyll serve Browsing your Jekyll site Browse to http://localhost:4000/ On encountering any problem while building and serving your Jekyll site you can consider visiting to the troubleshooting page</summary></entry></feed>